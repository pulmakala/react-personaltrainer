[{"/Users/veera/Desktop/Code/react/personaltrainer/personaltrainer/src/App.js":"1","/Users/veera/Desktop/Code/react/personaltrainer/personaltrainer/src/components/AddCustomer.js":"2","/Users/veera/Desktop/Code/react/personaltrainer/personaltrainer/src/components/Calendar.js":"3","/Users/veera/Desktop/Code/react/personaltrainer/personaltrainer/src/components/AddTraining.js":"4","/Users/veera/Desktop/Code/react/personaltrainer/personaltrainer/src/components/Customerlist.js":"5","/Users/veera/Desktop/Code/react/personaltrainer/personaltrainer/src/index.js":"6","/Users/veera/Desktop/Code/react/personaltrainer/personaltrainer/src/components/EditCustomer.js":"7","/Users/veera/Desktop/Code/react/personaltrainer/personaltrainer/src/reportWebVitals.js":"8"},{"size":1541,"mtime":1610708150100,"results":"9","hashOfConfig":"10"},{"size":3546,"mtime":1610707467133,"results":"11","hashOfConfig":"10"},{"size":1246,"mtime":1610715678362,"results":"12","hashOfConfig":"10"},{"size":2711,"mtime":1610711266954,"results":"13","hashOfConfig":"10"},{"size":5183,"mtime":1610711654833,"results":"14","hashOfConfig":"10"},{"size":500,"mtime":1610704667634,"results":"15","hashOfConfig":"10"},{"size":3721,"mtime":1610711258443,"results":"16","hashOfConfig":"10"},{"size":362,"mtime":1610704667662,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"wgeeji",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/veera/Desktop/Code/react/personaltrainer/personaltrainer/src/App.js",["39"],"import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport PeopleIcon from '@material-ui/icons/People';\nimport SportsIcon from '@material-ui/icons/Sports';\nimport EventIcon from '@material-ui/icons/Event';\n\nimport Customerlist from './components/Customerlist';\nimport Trainingslist from './components/Trainingslist';\nimport Calendar from './components/Calendar.js';\n\n\nfunction App() {\n  const [value, setValue] = useState('one');\n\n  const handleChange = (event, value) => {\n    setValue(value);\n  }\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">\n            Personal trainer\n          </Typography>\n          <Tabs value={value} onChange={handleChange}>\n                <Tab value=\"one\" icon={<PeopleIcon/>} label=\"Customers\" />\n                <Tab value=\"two\" icon={<SportsIcon/>} label=\"Trainings\" />\n                <Tab value=\"three\" icon={<EventIcon/>} label=\"Calendar\" />\n              </Tabs>\n        </Toolbar>\n      </AppBar>\n      {value === 'one' && \n      <div>\n        <Customerlist />\n      </div>}\n      {value === 'two' && \n      <div>\n        <Trainingslist />\n      </div>}\n      {value === 'three' && \n      <div>\n        <Calendar />\n      </div>}\n    </div>\n  );\n}\n\nexport default App;",["40","41"],"/Users/veera/Desktop/Code/react/personaltrainer/personaltrainer/src/components/AddCustomer.js",[],"/Users/veera/Desktop/Code/react/personaltrainer/personaltrainer/src/components/Calendar.js",[],"/Users/veera/Desktop/Code/react/personaltrainer/personaltrainer/src/components/AddTraining.js",["42","43"],"import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { PropertyKeys } from 'ag-grid-community';\n\nfunction AddTraining(props) {\n    const [training, setTraining] = useState({\n      date: '',\n      duration: '',\n      activity: '',\n    });\n    const [open, setOpen] = useState(false);\n\n    //Snackbar open\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    //Snackbar close\n    const handleClose = () => {\n      setOpen(false);\n    };\n    \n    //Save\n    const handleSave = () => {\n      const newTraining = {\n          ...training,\n          date: new Date(training.date),\n          customer: props.params.data.links[0].href,\n      };\n      props.addTraining(newTraining);\n      handleClose();\n    };\n\n    const inputChanged = (event) => {\n      setTraining({ ...training, [event.target.name]: event.target.value });\n    };\n\n    return (\n        <div>\n          <Button variant=\"outlined\" color=\"primary\" size=\"small\" onClick={handleClickOpen}>\n            +\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n          >\n          <DialogTitle id=\"form-dialog-title\">Add a New Training</DialogTitle>\n            <DialogContent>\n              <TextField\n              margin=\"dense\"\n              name=\"date\"\n              value={training.date}\n              onChange={inputChanged}\n              label=\"Date as MM.DD.YYYY HH:mm\"\n              fullWidth\n            />\n            <TextField\n              margin=\"dense\"\n              name=\"duration\"\n              value={training.duration}\n              onChange={inputChanged}\n              label=\"Duration as minutes\"\n              fullWidth\n            />\n            <TextField\n              margin=\"dense\"\n              name=\"activity\"\n              value={training.activity}\n              onChange={inputChanged}\n              label=\"Activity\"\n              fullWidth\n            />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={handleSave} color=\"primary\">\n                Save\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </div>\n    );\n}\n\nexport default AddTraining;","/Users/veera/Desktop/Code/react/personaltrainer/personaltrainer/src/components/Customerlist.js",["44","45"],"import React, { useState, useEffect } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\n\nimport Trainingslist from \"./Trainingslist\";\nimport AddCustomer from \"./AddCustomer\";\nimport EditCustomer from \"./EditCustomer\";\nimport AddTraining from \"./AddTraining\";\n\nfunction Customerlist() {\n    const [customers, setCustomers] = useState([]);\n    const [open, setOpen] = useState(false);\n    const [msg, setMsg] = useState('');\n  \n    useEffect(() => {\n        getCustomers();\n    }, [])\n\n    //Snackbar open\n    const handleOpen = () => {\n        setOpen(true);\n    }\n\n    //Snackbar close\n    const handleClose  = () => {\n        setOpen(false);\n    }\n\n    //Fetch data\n    const fetchData = () => {\n      fetch('https://customerrest.herokuapp.com/api/customers')\n      .then(response => response.json())\n      .then(data => setCustomers(data.content))\n      .catch(err => console.error(err))\n  }\n\n    //Get customers from back end REST api\n    const getCustomers = () => {\n        fetch('https://customerrest.herokuapp.com/api/customers')\n        .then(response => response.json())\n        .then(data => setCustomers(data.content))\n        .catch(err => console.error(err))\n    }\n\n    //Delete customer\n    const deleteCustomer = (link) => {\n      if (window.confirm(\"Are you sure?\")) {\n        fetch(link[0].href, { \n          method: \"DELETE\" \n        })\n        .then(_ => getCustomers())\n        .then(_ => setMsg('Customer was deleted succesfully'))\n        .then(_ => handleOpen())\n        .catch(err => console.error(err))\n      }\n    }\n\n    //Add a new customer\n    const addCustomer = (customer) => {\n      fetch(\"https://customerrest.herokuapp.com/api/customers\", {\n        method: \"POST\",\n        headers: { \"Content-type\": \"application/json\" },\n        body: JSON.stringify(customer),\n      })\n        .then(response => getCustomers())\n        .then(_ => setMsg('New customer was added succesfully'))\n        .then(_ => handleOpen())\n        .catch(err => console.error(err));\n    };\n\n    //Edit customer\n    const updateCustomer = (customer, link) => {\n      fetch(link, { \n        method: 'PUT',\n        headers: {\n          'Content-type' : 'application/json'\n        },\n        body: JSON.stringify(customer)\n      })\n      .then(res => fetchData()) \n      .then(_ => setMsg('Customer was updated succesfully'))\n      .then(_ => handleOpen())\n      .catch(err => console.error(err))\n    }\n\n    const addTraining = (training) => {\n      fetch('https://customerrest.herokuapp.com/api/trainings', {\n        method: 'POST',\n        headers: { 'Content-type': 'application/json' },\n        body: JSON.stringify(training)\n      })\n      .then(res => fetchData())\n      .then(_ => setMsg('New training added'))\n      .then(_ => handleOpen())\n      .catch(err => console.log(err))\n    }\n\n    //Lets create columns that match REST api\n    const columns = [\n        {\n          headerName: 'Add training',\n          width: 120,\n          cellRendererFramework: (params) => <AddTraining addTraining={addTraining} params={params} />\n        },\n        {headerName: 'First name', field: 'firstname', sortable: true, filter: true, width: 140},\n        {headerName: 'Last name',field: 'lastname', sortable: true, filter: true, width: 150},\n        {headerName: 'Address', field: 'streetaddress', sortable: true, filter: true, width: 160},\n        {headerName: 'Post code', field: 'postcode', sortable: true, filter: true, width: 130},\n        {headerName: 'City', field: 'city', sortable: true, filter: true, width: 140},\n        {headerName: 'E-mail', field: 'email', sortable: true, filter: true, width: 175},\n        {headerName: 'Phone', field: 'phone', sortable: true, filter: true, width: 130},\n        {\n          headerName: '',\n          accessor: 'content.self.href',\n          width: 80,\n          cellRendererFramework: (params) => \n          <EditCustomer updateCustomer={updateCustomer} customer={params.data} />\n        },\n        {\n          headerName: '',\n          field: \"links\",\n          width: 70,\n          cellRendererFramework: (params) => (\n          <IconButton \n            color=\"secondary\" \n            onClick={() => deleteCustomer(params.value)}\n            >\n              <DeleteIcon fontSize=\"small\" />\n          </IconButton>\n          )\n        }\n    ]\n\n    return (\n    <div>\n      <div className=\"ag-theme-material\" style={{  height: 600, width: '90%', margin: 'auto' }}>\n      <div>\n        <AddCustomer addCustomer={addCustomer} />\n      </div>\n        <AgGridReact\n          rowData={customers}\n          columnDefs={columns}\n          pagination=\"true\"\n          paginationPageSize=\"10\"\n        >\n        </AgGridReact>\n      </div>\n      <Snackbar \n        open={open}\n        onClose={handleClose}\n        autoHideDuration={2500}\n        message={msg}\n      />\n    </div>\n  );\n}\n\nexport default Customerlist;","/Users/veera/Desktop/Code/react/personaltrainer/personaltrainer/src/index.js",[],["46","47"],"/Users/veera/Desktop/Code/react/personaltrainer/personaltrainer/src/components/EditCustomer.js",["48","49"],"/Users/veera/Desktop/Code/react/personaltrainer/personaltrainer/src/reportWebVitals.js",[],{"ruleId":"50","severity":1,"message":"51","line":2,"column":27,"nodeType":"52","messageId":"53","endLine":2,"endColumn":36},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"50","severity":1,"message":"58","line":7,"column":8,"nodeType":"52","messageId":"53","endLine":7,"endColumn":25},{"ruleId":"50","severity":1,"message":"59","line":9,"column":10,"nodeType":"52","messageId":"53","endLine":9,"endColumn":22},{"ruleId":"50","severity":1,"message":"60","line":5,"column":8,"nodeType":"52","messageId":"53","endLine":5,"endColumn":16},{"ruleId":"50","severity":1,"message":"61","line":11,"column":8,"nodeType":"52","messageId":"53","endLine":11,"endColumn":21},{"ruleId":"54","replacedBy":"62"},{"ruleId":"56","replacedBy":"63"},{"ruleId":"50","severity":1,"message":"58","line":7,"column":8,"nodeType":"52","messageId":"53","endLine":7,"endColumn":25},{"ruleId":"50","severity":1,"message":"59","line":9,"column":10,"nodeType":"52","messageId":"53","endLine":9,"endColumn":22},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"'DialogContentText' is defined but never used.","'PropertyKeys' is defined but never used.","'EditIcon' is defined but never used.","'Trainingslist' is defined but never used.",["64"],["65"],"no-global-assign","no-unsafe-negation"]